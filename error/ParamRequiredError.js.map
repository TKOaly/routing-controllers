{"version":3,"sources":["../../src/error/ParamRequiredError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iEAA8D;AAI9D;;GAEG;AACH;IAAwC,sCAAe;IAInD,4BAAY,MAAc,EAAE,KAAoB;QAAhD,YACI,iBAAO,SA+CV;QAlDD,UAAI,GAAG,oBAAoB,CAAC;QAIxB,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAE1D,IAAI,SAAiB,CAAC;QACtB,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YACjB,KAAK,OAAO;gBACR,SAAS,GAAG,iBAAc,KAAK,CAAC,IAAI,UAAM,CAAC;gBAC3C,KAAK,CAAC;YAEV,KAAK,MAAM;gBACP,SAAS,GAAG,iBAAiB,CAAC;gBAC9B,KAAK,CAAC;YAEV,KAAK,YAAY;gBACb,SAAS,GAAG,sBAAmB,KAAK,CAAC,IAAI,UAAM,CAAC;gBAChD,KAAK,CAAC;YAEV,KAAK,OAAO;gBACR,SAAS,GAAG,uBAAoB,KAAK,CAAC,IAAI,UAAM,CAAC;gBACjD,KAAK,CAAC;YAEV,KAAK,QAAQ;gBACT,SAAS,GAAG,cAAW,KAAK,CAAC,IAAI,UAAM,CAAC;gBACxC,KAAK,CAAC;YAEV,KAAK,MAAM;gBACP,SAAS,GAAG,qBAAkB,KAAK,CAAC,IAAI,UAAM,CAAC;gBAC/C,KAAK,CAAC;YAEV,KAAK,OAAO;gBACR,SAAS,GAAG,sBAAmB,KAAK,CAAC,IAAI,WAAO,CAAC;gBACjD,KAAK,CAAC;YAEV,KAAK,SAAS;gBACV,SAAS,GAAG,YAAY,CAAC;gBACzB,KAAK,CAAC;YAEV,KAAK,QAAQ;gBACT,SAAS,GAAG,WAAW,CAAC;gBACxB,KAAK,CAAC;YAEV;gBACI,SAAS,GAAG,cAAc,CAAC;QACnC,CAAC;QAED,IAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,iCAAiC;QAC/F,KAAI,CAAC,OAAO,GAAM,SAAS,iCAA4B,GAAK,CAAC;;IACjE,CAAC;IAEL,yBAAC;AAAD,CAtDA,AAsDC,CAtDuC,iCAAe,GAsDtD;AAtDY,gDAAkB","file":"ParamRequiredError.js","sourcesContent":["import {BadRequestError} from \"../http-error/BadRequestError\";\r\nimport {ParamMetadata} from \"../metadata/ParamMetadata\";\r\nimport {Action} from \"../Action\";\r\n\r\n/**\r\n * Thrown when parameter is required, but was missing in a user request.\r\n */\r\nexport class ParamRequiredError extends BadRequestError {\r\n\r\n    name = \"ParamRequiredError\";\r\n\r\n    constructor(action: Action, param: ParamMetadata) {\r\n        super();\r\n        Object.setPrototypeOf(this, ParamRequiredError.prototype);\r\n\r\n        let paramName: string;\r\n        switch (param.type) {\r\n            case \"param\":\r\n                paramName = `Parameter \"${param.name}\" is`;\r\n                break;\r\n\r\n            case \"body\":\r\n                paramName = \"Request body is\";\r\n                break;\r\n                \r\n            case \"body-param\":\r\n                paramName = `Body parameter \"${param.name}\" is`;\r\n                break;\r\n\r\n            case \"query\":\r\n                paramName = `Query parameter \"${param.name}\" is`;\r\n                break;\r\n\r\n            case \"header\":\r\n                paramName = `Header \"${param.name}\" is`;\r\n                break;\r\n\r\n            case \"file\":\r\n                paramName = `Uploaded file \"${param.name}\" is`;\r\n                break;\r\n\r\n            case \"files\":\r\n                paramName = `Uploaded files \"${param.name}\" are`;\r\n                break;\r\n\r\n            case \"session\":\r\n                paramName = \"Session is\";\r\n                break;\r\n\r\n            case \"cookie\":\r\n                paramName = \"Cookie is\";\r\n                break;\r\n\r\n            default:\r\n                paramName = \"Parameter is\";\r\n        }\r\n\r\n        const uri = action.request.method + \" \" + action.request.url; // todo: check it it works in koa\r\n        this.message = `${paramName} required for request on ${uri}`;\r\n    }\r\n\r\n}\r\n"],"sourceRoot":".."}