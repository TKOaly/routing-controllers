{"version":3,"sources":["../../src/decorator/Controller.ts"],"names":[],"mappings":";;AAAA,kCAAgD;AAEhD;;;;;;GAMG;AACH,oBAA2B,SAAkB;IACzC,MAAM,CAAC,UAAU,MAAgB;QAC7B,8BAAsB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC;YACtC,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,SAAS;SACnB,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AARD,gCAQC","file":"Controller.js","sourcesContent":["import {getMetadataArgsStorage} from \"../index\";\r\n\r\n/**\r\n * Defines a class as a controller.\r\n * Each decorated controller method is served as a controller action.\r\n * Controller actions are executed when request come.\r\n *\r\n * @param baseRoute Extra path you can apply as a base route to all controller actions\r\n */\r\nexport function Controller(baseRoute?: string): Function {\r\n    return function (object: Function) {\r\n        getMetadataArgsStorage().controllers.push({\r\n            type: \"default\",\r\n            target: object,\r\n            route: baseRoute\r\n        });\r\n    };\r\n}"],"sourceRoot":".."}