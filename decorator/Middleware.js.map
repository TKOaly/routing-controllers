{"version":3,"sources":["../../src/decorator/Middleware.ts"],"names":[],"mappings":";;AAAA,kCAAgD;AAEhD;;;GAGG;AACH,oBAA2B,OAAsD;IAC7E,MAAM,CAAC,UAAU,MAAgB;QAC7B,8BAAsB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC;YACtC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ;YACvD,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAC7E,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AATD,gCASC","file":"Middleware.js","sourcesContent":["import {getMetadataArgsStorage} from \"../index\";\r\n\r\n/**\r\n * Marks given class as a middleware.\r\n * Allows to create global middlewares and control order of middleware execution.\r\n */\r\nexport function Middleware(options: { type: \"after\"|\"before\", priority?: number }): Function {\r\n    return function (target: Function) {\r\n        getMetadataArgsStorage().middlewares.push({\r\n            target: target,\r\n            type: options && options.type ? options.type : \"before\",\r\n            global: true,\r\n            priority: options && options.priority !== undefined ? options.priority : 0\r\n        });\r\n    };\r\n}"],"sourceRoot":".."}