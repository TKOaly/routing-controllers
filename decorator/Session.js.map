{"version":3,"sources":["../../src/decorator/Session.ts"],"names":[],"mappings":";;AACA,kCAAkD;AAalD,iBAAwB,mBAAyC,EAAE,YAA2B;IAC1F,IAAI,YAA8B,CAAC;IACnC,IAAI,OAA+B,CAAC;IACpC,EAAE,CAAC,CAAC,OAAO,mBAAmB,KAAK,QAAQ,CAAC,CAAC,CAAC;QAC1C,YAAY,GAAG,mBAAmB,CAAC;QACnC,OAAO,GAAG,YAAY,IAAI,EAAE,CAAC;IACjC,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,OAAO,GAAG,mBAAmB,IAAI,EAAE,CAAC;IACxC,CAAC;IAED,MAAM,CAAC,UAAU,MAAc,EAAE,UAAkB,EAAE,KAAa;QAC9D,8BAAsB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;YACjC,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,UAAU;YAClB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI;YAClE,cAAc,EAAE,OAAO,CAAC,SAAS;YACjC,QAAQ,EAAE,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK;SACtE,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAvBD,0BAuBC","file":"Session.js","sourcesContent":["import { ParamOptions } from \"../decorator-options/ParamOptions\";\r\nimport { getMetadataArgsStorage } from \"../index\";\r\n\r\n/**\r\n * Injects a Session object to the controller action parameter.\r\n * Must be applied on a controller action parameter.\r\n */\r\nexport function Session(options?: ParamOptions): ParameterDecorator;\r\n/**\r\n * Injects a Session object to the controller action parameter.\r\n * Must be applied on a controller action parameter.\r\n */\r\nexport function Session(propertyName: string, options?: ParamOptions): ParameterDecorator;\r\n\r\nexport function Session(optionsOrObjectName?: ParamOptions|string, paramOptions?: ParamOptions): ParameterDecorator {\r\n    let propertyName: string|undefined;\r\n    let options: ParamOptions|undefined;\r\n    if (typeof optionsOrObjectName === \"string\") {\r\n        propertyName = optionsOrObjectName;\r\n        options = paramOptions || {};\r\n    } else {\r\n        options = optionsOrObjectName || {};\r\n    }\r\n\r\n    return function (object: Object, methodName: string, index: number) {\r\n        getMetadataArgsStorage().params.push({\r\n            type: \"session\",\r\n            object: object,\r\n            method: methodName,\r\n            index: index,\r\n            name: propertyName,\r\n            parse: false, // it makes no sense for Session object to be parsed as json\r\n            required: options.required !== undefined ? options.required : true,\r\n            classTransform: options.transform,\r\n            validate: options.validate !== undefined ? options.validate : false,\r\n        });\r\n    };\r\n}"],"sourceRoot":".."}