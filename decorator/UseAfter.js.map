{"version":3,"sources":["../../src/decorator/UseAfter.ts"],"names":[],"mappings":";;AAAA,kCAAgD;AAoBhD;;;GAGG;AACH;IAAyB,qBAAsF;SAAtF,UAAsF,EAAtF,qBAAsF,EAAtF,IAAsF;QAAtF,gCAAsF;;IAC3G,MAAM,CAAC,UAAU,gBAAiC,EAAE,UAAmB;QACnE,WAAW,CAAC,OAAO,CAAC,UAAA,UAAU;YAC1B,8BAAsB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC/B,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,gBAA4B;gBAChF,MAAM,EAAE,UAAU;gBAClB,UAAU,EAAE,UAAU;gBACtB,WAAW,EAAE,IAAI;aACpB,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAXD,4BAWC","file":"UseAfter.js","sourcesContent":["import {getMetadataArgsStorage} from \"../index\";\r\n\r\n/**\r\n * Specifies a given middleware to be used for controller or controller action AFTER the action executes.\r\n * Must be set to controller action or controller class.\r\n */\r\nexport function UseAfter(...middlewares: Array<Function>): Function;\r\n\r\n/**\r\n * Specifies a given middleware to be used for controller or controller action AFTER the action executes.\r\n * Must be set to controller action or controller class.\r\n */\r\nexport function UseAfter(...middlewares: Array<(context: any, next: () => Promise<any>) => Promise<any>>): Function;\r\n\r\n/**\r\n * Specifies a given middleware to be used for controller or controller action AFTER the action executes.\r\n * Must be set to controller action or controller class.\r\n */\r\nexport function UseAfter(...middlewares: Array<(request: any, response: any, next: Function) => any>): Function;\r\n\r\n/**\r\n * Specifies a given middleware to be used for controller or controller action AFTER the action executes.\r\n * Must be set to controller action or controller class.\r\n */\r\nexport function UseAfter(...middlewares: Array<Function|((request: any, response: any, next: Function) => any)>): Function {\r\n    return function (objectOrFunction: Object|Function, methodName?: string) {\r\n        middlewares.forEach(middleware => {\r\n            getMetadataArgsStorage().uses.push({\r\n                target: methodName ? objectOrFunction.constructor : objectOrFunction as Function,\r\n                method: methodName,\r\n                middleware: middleware,\r\n                afterAction: true\r\n            });\r\n        });\r\n    };\r\n}\r\n"],"sourceRoot":".."}